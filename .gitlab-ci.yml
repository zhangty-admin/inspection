stages:
  - build
  - test
  - release
  - deploy

# 构建镜像
build:
  stage: build
  image: core.harbor.thuni-h.com/resmas/java-protoc:v2
  cache:
    paths:
      - .gradle/caches/
      - .gradle/wrapper/
  before_script:
    - export GRADLE_USER_HOME=$PWD/.gradle
  script:
    - ./gradlew clean build -x test
    - mv build/libs/*.jar build/app.jar
    - mv sql-scripts build/sql-scripts
  artifacts:
    paths:
      - build/app.jar
      - build/sql-scripts

sonarqube:
  stage: test
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_ANALYSIS_MODE: publish
    SONAR_PROJECT_KEY: $CI_PROJECT_NAMESPACE:$CI_PROJECT_NAME
  script:
    - gitlab-sonar-scanner
  cache:
    paths:
      - node_modules/
      - yarn.lock
  only:
    - master
    - tags
  allow_failure: true


# 构建镜像
release:
  stage: release
  dependencies:
    - build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    CI_REGISTRY_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/${CI_PROJECT_NAME}
  before_script:
    - export CI_REGISTRY_TAG=$CI_BUILD_REF_NAME-${CI_BUILD_REF:0:8}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -f Dockerfile -t $CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG .
    - docker tag $CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker rmi $CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG
    - docker rmi $CI_REGISTRY_IMAGE:latest
  only:
    - master
    - develop
    - tags

#deploy:
#  stage: deploy
#  image: lachlanevenson/k8s-kubectl:v1.11.7
#  dependencies:
#    - release
#  variables:
#    DOCKER_HOST: tcp://localhost:2375
#    DOCKER_DAEMON_ARGS: --registry-mirror=$REGISTRY_MIRROR
#    CI_REGISTRY_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/${CI_PROJECT_NAME}
#  before_script:
#    - export CI_REGISTRY_TAG=$CI_BUILD_REF_NAME-${CI_BUILD_REF:0:8}
#  script:
#    - kubectl config set-cluster gitlab-deploy --server="$KUBE_URL"
#    - kubectl config set-credentials gitlab-deploy --token="$KUBE_TOKEN"
#    - kubectl config set-context gitlab-deploy --cluster=gitlab-deploy --user=gitlab-deploy --namespace=test
#    - kubectl config use-context gitlab-deploy
#    - apk update && apk add bash && apk add curl
#    - ./deploy.sh
#    - ./notification.sh "SUTY 服务部署成功" "$CI_COMMIT_MESSAGE" "http://suty.homeword.cn/graphql"
#  environment:
#    name: staging
#    url: http://suty.homeword.cn:31471
#  only:
#    - master
#    - tags